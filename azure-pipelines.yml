trigger: none

stages:
- stage: Build

  jobs:
  - job: BuildApp
    displayName: Build App
    pool:
      vmImage: ubuntu-latest

    steps:
    - task: UsePythonVersion@0
      displayName: Use Python 3.6
      inputs:
        versionSpec: 3.6

    - task: Bash@3
      displayName: Install application dependencies
      inputs:
        workingDirectory: $(Build.Repository.LocalPath)/__app__
        targetType: inline
        script: |
          python -m venv worker_venv
          source worker_venv/bin/activate
          pip install -r requirements.txt

    - task: ArchiveFiles@2
      displayName: Create app package
      inputs:
        rootFolderOrFile: $(Build.Repository.LocalPath)/__app__
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop

- stage: Deploy
  dependsOn: Build
  condition: succeeded()

  jobs:
  - deployment: DeployApp
    displayName: Deploy App
    environment: production
    pool:
      vmImage: ubuntu-latest

    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureFunctionApp@1
            displayName: Deploy function app
            inputs:
              azureSubscription: $(ArmConnectionName)
              appType: functionAppLinux
              appName: $(FunctionAppName)
              package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
